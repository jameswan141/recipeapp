{"version":3,"sources":["components/styles/nav.ts","components/Nav.tsx","components/styles/confirmationDialog.ts","components/ConfirmationDialog.tsx","components/IngredientInput.tsx","components/InstructionInput.tsx","components/styles/updateDialog.ts","components/UpdateDialog.tsx","components/styles/recipeCard.ts","components/RecipeCard.tsx","components/styles/dialog.ts","components/Dialog.tsx","components/styles/dashboard.ts","components/Dashboard.tsx","components/styles/auth.ts","components/Login.tsx","components/Signup.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","flexWrap","navContainer","width","margin","height","backgroundColor","top","opacity","boxShadow","transition","justifyContent","zIndex","fontSize","alignItems","position","link","textDecoration","navItem","color","Nav","classes","className","to","textField","marginLeft","spacing","marginRight","deleteButton","ConfirmationDialog","props","React","useState","open","setOpen","handleClose","id","Button","variant","onClick","Dialog","onClose","DialogTitle","DialogActions","axios","delete","process","REACT_APP_ROOT_URL","recipeId","then","res","getRecipes","catch","err","console","log","autoFocus","units","quantityInput","nameInput","unitInput","inputContainer","IngredientInput","name","quantity","unit","ingredient","setIngredient","handleChange","event","target","value","TextField","label","onChange","type","select","map","option","MenuItem","addIngredient","descriptionInput","InstructionInput","description","instruction","setInstruction","addInstruction","form","padding","flexDirection","updateRecipeButton","border","DialogComponent","title","recipe","username","match","params","ingredients","instructions","setRecipe","changeHandler","e","preventDefault","DialogContent","put","_id","recipeCardContainer","borderRadius","minWidth","maxWidth","buttonContainer","bottom","thumbnailImage","objectFit","thumbnailContainer","RecipeCard","alt","src","thumbnailURL","UpdateDialog","addRecipeButton","DialogContentText","post","localStorage","getItem","dashboardContainer","marginTop","button","recipeCards","Dashboard","recipes","setRecipes","get","data","useEffect","loginContainer","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","loginCard","error","Login","password","user","setUser","setError","isLoading","setIsLoading","onSubmit","length","history","push","placeholder","timeout","Signup","withRouter","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a48e2850.chunk.js","sourcesContent":["import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n        root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        },\n        navContainer: {\n            width: \"100%\",\n            margin: \"0 auto\",\n            height: \"60px\",\n            backgroundColor: \"rgb(0, 73, 114)\",\n            top: 0,\n            opacity: \".8\",\n            boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\n            transition: \"0.3s\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            zIndex: 100,\n            fontSize: \"1.8rem\",\n            alignItems: \"center\",\n            position: \"fixed\",\n        },\n        link: {\n            textDecoration: \"none\",\n        },\n        navItem: {\n            textDecoration: \"none\",\n            margin: \"20px\",\n            color: \"white\",\n        }\n    })\n  )\n\nexport default useStyles;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// STYLES\nimport useStyles from \"./styles/nav\"\n\nconst Nav: React.FC<any> = () => {\n    const classes = useStyles();\n\n    return (\n        <nav className={classes.navContainer}>\n            <Link className={classes.link} to=\"/\">\n                <h1 className={classes.navItem}>Recipes App</h1>\n            </Link>\n        </nav>\n    )\n}\n\nexport default Nav;","import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\",\n      margin: '5px',\n      fontSize: '4rem'\n    },\n    deleteButton: {\n      fontSize: \"14px\"\n    }\n  }),\n);\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport useStyles from './styles/confirmationDialog';\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogInterface> = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleYes = () => {\n    axios.delete(`${process.env.REACT_APP_ROOT_URL}recipes/${props.recipeId}`)\n    .then((res) => {\n      setOpen(false);\n      props.getRecipes();\n    })\n    .catch((err) => {\n      console.log(\"error - \", err)\n    });\n  };\n\n  return (\n    <div id=\"dialog-container\">\n    <Button className={classes.deleteButton} variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\n      DELETE\n    </Button>\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Are you sure?\"}</DialogTitle>\n      <DialogActions>\n        <Button onClick={handleYes} color=\"primary\">\n            YES\n        </Button>\n        <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            NO\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n  );\n}\n\nexport default ConfirmationDialog;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme, TextField, MenuItem } from '@material-ui/core';\n\ninterface IngredientInputProps {\n    name?: string;\n    quantity?: number;\n    unit?: number;\n    addIngredient: (ingredient: any) => void;\n}\n\nconst units = [\n    \"oz\",\n    \"cps\",\n    \"tbs\"\n]\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    quantityInput: {\n        width: \"100px\",\n        margin: \"3px\"\n    },\n    nameInput: {\n        width: \"80%\",\n        margin: \"3px\"\n    },\n    unitInput: {\n        width: \"100px\",\n        margin: \"3px\"\n    },\n    inputContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\"\n    }\n  }),\n);\n\nexport default function IngredientInput(props: any) {\n    const [ ingredient, setIngredient ] = useState({\n        name: \"\",\n        quantity: 0,\n        unit: \"oz\"\n    });\n\n    const classes = useStyles();\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setIngredient({...ingredient, [event.target.name]:event.target.value})\n    };\n\n    const addIngredient = () => {\n        props.addIngredient(ingredient);\n        setIngredient({\n            name: \"\",\n            quantity: 0,\n            unit: \"oz\"\n        })\n    }\n\n    return (\n        <div className={classes.inputContainer}>\n            <TextField \n                label=\"Name\" \n                variant=\"outlined\" \n                name=\"name\"\n                className={classes.nameInput}\n                onChange={handleChange}\n                value={ingredient.name}\n                type='text'/>\n            <TextField \n                className={classes.quantityInput} \n                label=\"Quantity\" \n                variant=\"outlined\" \n                name=\"quantity\"\n                onChange={handleChange}\n                value={ingredient.quantity}\n                type='number'/>\n            <TextField\n                variant=\"outlined\"\n                className={classes.unitInput}\n                select\n                label=\"Unit\"\n                name=\"unit\"\n                value={ingredient.unit}\n                onChange={handleChange}>\n                {units.map(option => (\n                    <MenuItem key={option} value={option}>\n                    {option}\n                    </MenuItem>\n                ))}\n            </TextField>\n            <Button onClick={addIngredient}>Add Ingredient</Button>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme, TextField, MenuItem } from '@material-ui/core';\n\ninterface IngredientInputProps {\n    name?: string;\n    quantity?: number;\n    unit?: number;\n    addIngredient: (ingredient: any) => void;\n}\n\nconst units = [\n    \"oz\",\n    \"cps\",\n    \"tbs\"\n]\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    descriptionInput: {\n        width: \"100%\",\n    },\n    inputContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\"\n    }\n  }),\n);\n\nexport default function InstructionInput(props: any) {\n    const [ instruction, setInstruction ] = useState({\n        description: \"\"\n    });\n\n    const classes = useStyles();\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setInstruction({...instruction, [event.target.name]:event.target.value})\n    };\n\n    const addInstruction = () => {\n        props.addInstruction(instruction);\n        setInstruction({\n            description: \"\",\n        })\n    }\n\n    return (\n        <div className={classes.inputContainer}>\n            <TextField \n                label=\"Instruction\" \n                variant=\"outlined\" \n                name=\"description\"\n                className={classes.descriptionInput}\n                onChange={handleChange}\n                value={instruction.description}\n                type='text'/>\n            <Button onClick={addInstruction}>Add Instruction</Button>\n        </div>\n    )\n}\n","\nimport { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\",\n      margin: '5px',\n      fontSize: '4rem'\n    },\n    form: {\n      padding: '5px',\n      display: 'flex',\n      flexDirection: 'column',\n      width: '500px',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    updateRecipeButton: {\n      margin: \"5px\",\n      color: \"black\",\n      fontSize: \"14px\",\n      border: \"1px solid black\",\n      backgroundColor: \"white\"\n    }\n    })\n)\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\n// COMPONENTS\nimport IngredientInput from './IngredientInput';\nimport InstructionInput from './InstructionInput';\nimport useStyles from './styles/updateDialog';\n\nconst DialogComponent = (props: any) => {\n  const [open, setOpen] = React.useState(false);\n  const [recipe, setRecipe] = React.useState({\n    title: props.recipe.title,\n    description: props.recipe.description,\n    username: props.match.params.username,\n    ingredients: props.recipe.ingredients, \n    instructions: props.recipe.instructions ? props.recipe.instructions : [{description: \"\"}],\n  });\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCancel = () => {\n    setRecipe({\n      title: \"\",\n      description: \"\",\n      username: props.match.params.username,\n      ingredients: [{name: \"Example\", quantity: 3, unit: \"oz\"}], \n      instructions: [{description: \"\"}]\n    })\n    handleClose();\n  };\n\n  const handleSubmit = (e: React.MouseEvent <HTMLButtonElement>) => {\n    e.preventDefault();\n    axios.put(`${process.env.REACT_APP_ROOT_URL}recipes/${props.recipe._id}`, recipe)\n    .then((res) => {\n      setRecipe({\n        title: \"\",\n        description: \"\",\n        username: props.match.params.username,\n        ingredients: [{name: \"Example\", quantity: 3, unit: \"oz\"}], \n        instructions: [{description: \"\"}] \n      })\n      props.getRecipes();\n      handleClose();\n    })\n    .catch((err) => {\n      console.log(\"error - \", err)\n    });\n    setOpen(false);\n  };\n\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setRecipe({...recipe, [e.target.name]: e.target.value})\n  }\n\n  const addIngredient = (ingredient: IngredientInterface) => {\n    setRecipe({...recipe, ingredients: [...recipe.ingredients, ingredient]})\n  };\n\n  const addInstruction = (instruction: StepInterface) => {\n    setRecipe({...recipe, instructions: [...recipe.instructions, instruction]})\n  };\n\n  return (\n    <div id=\"dialog-container\">\n      <Button className={classes.updateRecipeButton} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          UPDATE \n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Submit a recipe below.\"}</DialogTitle>\n        <DialogContent>\n          <form className={classes.form}>\n            <TextField \n              className={classes.textField} \n              id=\"outlined-basic\" \n              label=\"Title\" \n              name=\"title\"\n              onChange={changeHandler}\n              value={recipe.title}\n              variant=\"outlined\" />\n            <TextField \n              className={classes.textField} \n              id=\"outlined-basic\" \n              label=\"Description\" \n              name=\"description\"\n              onChange={changeHandler}\n              value={recipe.description}\n              variant=\"outlined\" />\n            <h3>Enter ingredients below</h3>\n            {\n              recipe.ingredients.map((ingredient: any) => {\n                return <p>{`${ingredient.name} - ${ingredient.quantity}${ingredient.unit}`}</p>\n              })\n            }\n            <IngredientInput addIngredient={addIngredient}/>\n            <h3>Enter instructions below</h3>\n            {\n              recipe.instructions.map((instruction: any) => {\n                console.log(\"instruction in map - \", instruction.description)\n                return <p>{instruction.description}</p>\n              })\n            }\n            <InstructionInput addInstruction={addInstruction}/>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleSubmit} type=\"submit\" color=\"primary\">\n            UPDATE\n          </Button>\n          <Button onClick={handleCancel} color=\"primary\" autoFocus>\n            CANCEL\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default DialogComponent;","import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n        root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        },\n        recipeCardContainer: {\n            border: \"1px solid whitesmoke\",\n            borderRadius: \"5px\",\n            minWidth: \"300px\",\n            maxWidth: \"400px\",\n            height: \"400px\",\n            boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            margin: \"5px\",\n            fontSize: \"1.4rem\",\n            position: \"relative\",\n        }, \n        buttonContainer: {\n            display: \"flex\",\n            width: \"100%\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n            position: \"absolute\",\n            bottom: \"20px\"\n        },\n        thumbnailImage: {\n          width: \"100%\",\n          height: \"200px\",\n          borderRadius: \"5px 5px 0 0\",\n          objectFit: \"cover\",\n        }, \n        thumbnailContainer: {\n          width: \"100%\",\n        }\n    })\n  )\n\nexport default useStyles;","import React from 'react';\n\n// COMPONENTS\nimport ConfirmationDialog from './ConfirmationDialog';\nimport UpdateDialog from './UpdateDialog';\n\n// STYLES\nimport useStyles from './styles/recipeCard';\n\ninterface RecipeCardProps {\n    recipe: Recipe;\n    getRecipes: () => void; \n}\n\nconst RecipeCard: React.FC<RecipeCardProps> = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.recipeCardContainer}>\n            <div className={classes.thumbnailContainer}>\n                <img className={classes.thumbnailImage} alt=\"recipe in full color\" src={props.recipe.thumbnailURL}/>\n            </div>\n            <div>\n                <h2>{props.recipe.title}</h2>\n                <p>{props.recipe.description}</p>\n            </div>\n            <div className={classes.buttonContainer}>\n                <ConfirmationDialog getRecipes={props.getRecipes} recipeId={props.recipe._id}/>\n                <UpdateDialog {...props} getRecipes={props.getRecipes} recipe={props.recipe} />\n            </div>\n        </div>\n    )\n}\n\nexport default RecipeCard;","import { makeStyles, createStyles, Theme }  from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"100%\",\n      margin: '5px',\n      fontSize: '4rem'\n    },\n    form: {\n      padding: '5px',\n      display: 'flex',\n      flexDirection: 'column',\n      width: '500px',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    addRecipeButton: {\n      width: \"200px\",\n      fontSize: \"14px\",\n      border: \"1px solid green\",\n      color: \"white\",\n      backgroundColor: \"green\",\n      \"&:hover\": {\n        backgroundColor: \"darkgreen\",\n      }\n    }\n  }),\n)\n\nexport default useStyles;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\n\n// COMPONENTS\nimport IngredientInput from './IngredientInput';\nimport InstructionInput from './InstructionInput';\nimport useStyles from './styles/dialog';\n\nconst DialogComponent: React.FC<any> = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [recipe, setRecipe] = React.useState({\n    title: \"\",\n    description: \"\",\n    thumbnailURL: \"\",\n    username: props.match.params.username,\n    ingredients: [{name: \"Example\", quantity: 3, unit: \"oz\"}], \n    instructions: [{description: \"\"}]\n  });\n  const classes = useStyles();\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCancel = () => {\n    setRecipe({\n      title: \"\",\n      description: \"\",\n      thumbnailURL: \"\",\n      username: props.match.params.username,\n      ingredients: [{name: \"Example\", quantity: 3, unit: \"oz\"}], \n      instructions: [{description: \"\"}]\n    })\n    handleClose();\n  };\n\n  const handleSubmit = () => {\n    axios.post(`${process.env.REACT_APP_ROOT_URL}recipes`, recipe)\n    .then((res) => {\n      props.getRecipes();\n      setRecipe({\n        title: \"\",\n        description: \"\",\n        thumbnailURL: \"\",\n        username: localStorage.getItem(\"username\"),\n        ingredients: [{name: \"Example\", quantity: 3, unit: \"oz\"}], \n        instructions: [{description: \"\"}] \n      })\n    })\n    .catch((err) => {\n      console.log(\"error - \", err)\n    });\n    setOpen(false);\n  };\n\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setRecipe({...recipe, [e.target.name]: e.target.value})\n  }\n\n  const addIngredient = (ingredient: IngredientInterface) => {\n    setRecipe({...recipe, ingredients: [...recipe.ingredients, ingredient]})\n  };\n\n  const addInstruction = (instruction: StepInterface) => {\n    setRecipe({...recipe, instructions: [...recipe.instructions, instruction]})\n  };\n\n  return (\n    <div id=\"dialog-container\">\n    <Button className={classes.addRecipeButton} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        ADD RECIPE\n    </Button>\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"Submit a recipe below!\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <form className={classes.form}>\n            <TextField \n              className={classes.textField} \n              id=\"outlined-basic\" \n              label=\"Title\" \n              name=\"title\"\n              onChange={changeHandler}\n              value={recipe.title}\n              variant=\"outlined\" />\n            <TextField \n              className={classes.textField} \n              id=\"outlined-basic\" \n              label=\"Description\" \n              name=\"description\"\n              onChange={changeHandler}\n              value={recipe.description}\n              variant=\"outlined\" />\n            <TextField \n              className={classes.textField} \n              id=\"outlined-basic\" \n              label=\"Thumbnail URL\" \n              name=\"thumbnailURL\"\n              onChange={changeHandler}\n              value={recipe.thumbnailURL}\n              variant=\"outlined\" />\n            <h3>Enter ingredients below</h3>\n            {\n              recipe.ingredients.map((ingredient) => {\n                return <p>{`${ingredient.name} - ${ingredient.quantity}${ingredient.unit}`}</p>\n              })\n            }\n            <IngredientInput addIngredient={addIngredient}/>\n            <h3>Enter instructions below</h3>\n            {\n              recipe.instructions.map((instruction) => {\n                return <p>{`${instruction.description}`}</p>\n              })\n            }\n            <InstructionInput addInstruction={addInstruction}/>\n          </form>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleSubmit} color=\"primary\">\n          POST\n        </Button>\n        <Button onClick={handleCancel} color=\"primary\" autoFocus>\n          CANCEL\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n  );\n}\n\nexport default DialogComponent;","import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n        root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        },\n        dashboardContainer: {\n            marginTop: \"80px\",\n            display: \"flex\",\n            flexDirection: \"column\"\n        },\n        button: {\n            width: \"100%\",\n            maxWidth: \"200px\",\n            height: \"30px\",\n            margin: \"20px 5px\",\n            fontSize: \"1.3rem\",\n            borderRadius: \"5px\"\n        },\n        recipeCards: {\n            display: \"flex\",\n            margin: \"10px\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n        }\n    })\n  )\n\nexport default useStyles;","import React, { useEffect, useState } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\n// COMPONENTS\nimport RecipeCard from './RecipeCard';\nimport Dialog from './Dialog';\nimport { RouteComponentProps } from 'react-router-dom';\n\n// STYLES\nimport useStyles from './styles/dashboard';\n\nconst Dashboard: React.FC<RouteComponentProps<match>> = (props) => {\n    const classes = useStyles();\n    const [ recipes, setRecipes ] = useState([]);\n    const getRecipes = () => {\n        const { username } = props.match.params;\n        axios.get(`${process.env.REACT_APP_ROOT_URL}users/${username}/recipes`).then((res: AxiosResponse) => {\n            setRecipes(res.data);\n        }).catch((err: Error) => {\n            console.log(err);\n        })\n    };\n    \n    useEffect(() => {\n        getRecipes();\n    },[]);\n\n    return (\n        <div className={classes.dashboardContainer}>\n            <Dialog {...props} getRecipes={getRecipes}/>\n            <div className={classes.recipeCards}>\n                { recipes.map((recipe: Recipe) => {\n                return <RecipeCard {...props} getRecipes={getRecipes} recipe={recipe}/>\n                })}\n            </div>\n        </div>\n    )\n}\nexport default Dashboard;","import { makeStyles, Theme, createStyles, TextField } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    loginContainer: {\n        backgroundImage: \"url('https://images.unsplash.com/photo-1534422298391-e4f8c172dddb?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=750&q=80')\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        height: \"100vh\",\n        display: \"flex\",\n        alignItems: \"center\", \n        flexDirection: \"column\",\n        justifyContent: \"center\",\n    },\n    loginCard: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"20px\",\n        border: \"1px solid whitesmoke\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"5px\",\n        maxWidth: \"400px\",\n        margin: \"0 auto\",\n        height: \"400px\",\n        boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\n        backgroundColor: \"whitesmoke\",\n    },\n    button: {\n        height: \"40px\",\n        margin: \"20px\",\n        width: \"200px\",\n        borderRadius: \"5px\",\n        padding: \"10px\",\n        color: \"white\",\n        fontSize: \"18px\",\n        backgroundColor: \"rgb(0, 73, 114)\",\n        opacity: \".8\"\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      height: \"40px\",\n      width: \"100%\",\n      margin: \"10px\",\n      fontSize: \"4rem\"\n    },\n    form: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: \"10px 0\",\n        height: \"100px\",\n        width: \"300px\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    error: {\n        color: \"red\"\n    }\n  }),\n);\n\nexport default useStyles;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { TextField } from '@material-ui/core';\nimport Loader from 'react-loader-spinner'\nimport useStyles from './styles/auth';\n\n// STYLES\n// import './styles/login.scss';\nimport { Link } from 'react-router-dom';\n\nconst Login: React.FC<any> = (props) => {\n    const [ user, setUser ] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const [ error, setError ] = useState<string>(\"\");\n    const [ isLoading, setIsLoading ] = useState<boolean>(false);\n    const classes = useStyles();\n\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement> ) => { \n        e.preventDefault();\n        setUser({...user, [e.target.name]: e.target.value});\n    };\n\n    const submitHandler = (e: React.FormEvent) => { \n        e.preventDefault();\n\n        if (user.username.length > 0 && user.password.length > 0) {\n            setIsLoading(true)\n            axios\n            .post(`${process.env.REACT_APP_ROOT_URL}auth/login`, user)\n            .then((res) => {\n                setUser({\n                    username: \"\",\n                    password: \"\"\n                })\n                setIsLoading(true)\n                setError(\"\");\n                props.history.push(`/${user.username}`);\n            })\n            .catch((err) => {\n                console.log(err);\n                setError(\"An error occurred. Try again.\");\n                setIsLoading(false)\n            })\n        } else {\n            setError(\"Provide your email and password.\")\n        }\n    };\n\n    return (\n        <div className={classes.loginContainer}>\n            <div className={classes.loginCard}>\n                <form className={classes.form} onSubmit={submitHandler}>\n                    <h2>Log In!</h2>\n                    {error ? <p className={classes.error}>{error}</p> : null}\n                    <TextField \n                        type=\"text\" \n                        value={user.username} \n                        className={classes.textField} \n                        onChange={changeHandler} \n                        placeholder=\"username\" \n                        name=\"username\" \n                        label=\"username\" \n                        variant=\"outlined\"\n                        />\n                    <TextField \n                        type=\"text\" \n                        value={user.password} \n                        className={classes.textField} \n                        onChange={changeHandler} \n                        placeholder=\"password\" \n                        label=\"password\" \n                        name=\"password\" \n                        variant=\"outlined\"\n                        />\n                    <button className={classes.button} type=\"submit\">\n                        {\n                            isLoading ?  <Loader\n                            type=\"TailSpin\"\n                            color=\"white\"\n                            height={20}\n                            width={20}\n                            timeout={3000} //3 secs\n                    \n                         /> : \"Log In\"\n                        }\n                    </button>\n                    <p>Not a user? <Link to=\"/\">Sign Up</Link></p>\n                </form>\n            </div>\n        </div>\n    )\n}\nexport default Login;","import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner'\nimport axios from 'axios';\nimport {  TextField } from '@material-ui/core';\nimport useStyles from './styles/auth';\n\n// STYLES\n// import './styles/login.scss';\nimport { Link } from 'react-router-dom';\n\nconst Signup: React.FC <any> = (props) => {\n    const [ user, setUser ] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const classes = useStyles();\n    const [ error, setError ] = useState<string>(\"\");\n    const [ isLoading, setIsLoading ] = useState<boolean>(false);\n\n    const changeHandler = (e: React.ChangeEvent<HTMLInputElement> ) => { \n        e.preventDefault();\n        setUser({...user, [e.target.name]: e.target.value});\n    };\n\n    const submitHandler = (e: React.FormEvent) => { \n        e.preventDefault();\n\n        if (user.username.length > 0 && user.password.length > 0) {\n            setIsLoading(true)\n            axios\n            .post(`${process.env.REACT_APP_ROOT_URL}auth/signup`, user)\n            .then((res) => {\n                setUser({\n                    username: \"\",\n                    password: \"\"\n                })\n                setError(\"\");\n                setIsLoading(false)\n                props.history.push(`/${user.username}`);\n            })\n            .catch((err) => {\n                setError(\"An error occurred. Try again.\");\n                setIsLoading(false)\n                console.log(err);\n            })\n        } else {\n            setError(\"Provide your email and password.\")\n        }\n    };\n\n    return (\n        <div className={classes.loginContainer}>\n            <div className={classes.loginCard}>\n                <form className={classes.form} onSubmit={submitHandler}>\n                    <h2>Sign Up!</h2>\n                    {error ? <p className={classes.error}>{error}</p> : null}\n                    <TextField \n                        type=\"text\" \n                        value={user.username} \n                        className={classes.textField} \n                        onChange={changeHandler} \n                        placeholder=\"username\" \n                        name=\"username\" \n                        label=\"username\" \n                        variant=\"outlined\"\n                        />\n                    <TextField \n                        type=\"text\" \n                        value={user.password} \n                        className={classes.textField} \n                        onChange={changeHandler} \n                        placeholder=\"password\" \n                        label=\"password\" \n                        name=\"password\" \n                        variant=\"outlined\"\n                        />\n                    <button className={classes.button} type=\"submit\">\n                        {\n                            isLoading ?  <Loader\n                            type=\"TailSpin\"\n                            color=\"white\"\n                            height={20}\n                            width={20}\n                            timeout={3000} //3 secs\n                    \n                         /> : \"Sign Up\"\n                        }\n                    </button>\n                    <p>Already a user? <Link to=\"/login\">Log In</Link></p>\n                </form>\n            </div>\n        </div>\n    )\n}\nexport default Signup;","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n// import ProtectedRoute from './utils/ProtectedRoute';\n\n// COMPONENTS\nimport Nav from './components/Nav';\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Switch >\n        <Route path=\"/login\" render={(props) => <Login {...props} />} />\n        <Route path=\"/:username\" render={(props) => <Dashboard {...props} />} />\n        <Route path=\"/\" render={(props) => <Signup {...props} />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}